pipeline {
    agent any
    environment {
        KUBECONFIG = '/var/jenkins_home/.kube/config' // Configuration de l'environnement pour Kubernetes
    }
    stages {
        stage('Cloner le Dépôt Git et Copier les Fichiers de Configuration') {
            steps {
                script {
                    sh 'git clone -b BAS_ALAIN --single-branch https://github.com/TeamMlops2023/Weather_Forecast.git'
                    sh 'cp Weather_Forecast/monitoring/grafana-values.yaml .'
                    sh 'cp Weather_Forecast/monitoring/values.yaml .'
                }
            }
        }

        stage('Vérifier et Créer le Namespace Monitoring') {
            steps {
                script {
                    def exists = sh(script: "kubectl get namespace monitoring --no-headers || true", returnStdout: true).trim()
                    if (exists == "") {
                        sh 'kubectl create namespace monitoring'
                        echo 'Namespace monitoring créé.'
                    } else {
                        echo 'Namespace monitoring existe déjà.'
                    }
                }
            }
        }

        stage('Deploy Prometheus') {
            steps {
                script {
                    sh 'helm upgrade --install prometheus prometheus-community/prometheus -f values.yaml --namespace monitoring'
                    echo 'Déploiement de Prometheus réussi.'
                }
            }
        }

        stage('Deploy Grafana') {
            steps {
                script {
                    sh 'helm upgrade --install grafana grafana/grafana -f grafana-values.yaml --namespace monitoring'
                    echo 'Déploiement de Grafana réussi.'
                }
            }
        }
    }
    post {
        always {
            echo 'Pipeline de déploiement de monitoring terminé. Vérifiez les logs pour les détails.'
        }
    }
}
