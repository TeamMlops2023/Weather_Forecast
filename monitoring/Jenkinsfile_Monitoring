pipeline {
    agent any
    environment {
        KUBECONFIG = '/var/jenkins_home/.kube/config' // Configuration de l'environnement pour Kubernetes
    }
    stages {
        stage('Nettoyer et Cloner le Dépôt Git') {
            steps {
                script {
                    sh 'rm -rf Weather_Forecast' // Nettoyer le répertoire avant le clonage
                    sh 'git clone -b BAS_ALAIN --single-branch https://github.com/TeamMlops2023/Weather_Forecast.git'
                    sh 'cp Weather_Forecast/monitoring/grafana-values.yaml .'
                    sh 'cp Weather_Forecast/monitoring/values.yaml .'
                }
            }
        }

        stage('Deploy Prometheus') {
            steps {
                script {
                    // Copier le fichier values.yaml dans le serveur Jenkins
                    sh 'docker cp values.yaml kind-control-plane:/values.yaml'
                    // Exécuter Helm à l'intérieur d'un conteneur Docker séparé
                    sh "docker run --network host -v /var/jenkins_home/.kube/config:/root/.kube/config -v $(pwd)/values.yaml:/values.yaml alpine/helm:latest upgrade --install prometheus prometheus-community/prometheus -f /values.yaml --namespace monitoring"
                    echo 'Déploiement de Prometheus réussi.'
                }
            }
        }

        stage('Deploy Grafana') {
            steps {
                script {
                    // Copier le fichier grafana-values.yaml dans le serveur Jenkins
                    sh 'docker cp grafana-values.yaml kind-control-plane:/grafana-values.yaml'
                    // Exécuter Helm à l'intérieur d'un conteneur Docker séparé
                    sh "docker run --network host -v /var/jenkins_home/.kube/config:/root/.kube/config -v $(pwd)/grafana-values.yaml:/grafana-values.yaml alpine/helm:latest upgrade --install grafana grafana/grafana -f /grafana-values.yaml --namespace monitoring"
                    echo 'Déploiement de Grafana réussi.'
                }
            }
        }
    }
    post {
        always {
            echo 'Pipeline de déploiement de monitoring terminé. Vérifiez les logs pour les détails.'
        }
    }
}
