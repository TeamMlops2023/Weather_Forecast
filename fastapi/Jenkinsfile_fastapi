pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                script {
                    sh 'docker build -t fastapi-image ./fastapi'
                    echo 'Construction de l\'image Docker réussie.'
                }
            }
        }
        stage('Run') {
            steps {
                script {
                    sh 'docker run -d --name fastapi-container -p 8000:8000 fastapi-image'
                    echo 'Lancement du conteneur réussi.'
                }
            }
        }
        stage('Test') {
            steps {
                script {
                    // Attendez un peu pour que le serveur démarre
                    sh 'sleep 10'

                    // Test de l'endpoint racine
                    sh 'curl -s http://localhost:8000/ | grep "Hello World" && echo "Test de l\'endpoint racine réussi." || echo "Test de l\'endpoint racine échoué."'

                    // Test de l'endpoint /status
                    sh 'curl -s http://localhost:8000/status | grep "ok" && echo "Test de l\'endpoint /status réussi." || echo "Test de l\'endpoint /status échoué."'

                    // Test de l'endpoint /echo
                    sh 'curl -s "http://localhost:8000/echo?text=HelloJenkins" | grep "HelloJenkins" && echo "Test de l\'endpoint /echo réussi." || echo "Test de l\'endpoint /echo échoué."'
                }
            }
        }
        stage('Cleanup') {
            steps {
                script {
                    sh 'docker stop fastapi-container || true'
                    sh 'docker rm fastapi-container || true'
                    echo 'Nettoyage du conteneur réussi.'
                }
            }
        }
    }

    post {
        success {
            echo 'Tests réussis : Votre application FastAPI est fonctionnelle.'
        }
    }
}
