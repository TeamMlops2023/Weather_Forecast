pipeline {
    agent any
    stages {
        stage('Build Docker Image') {
            steps {
                script {
                    // Build your Docker image here
                    sh "docker build -t mlops_2023/weather_forecast-fastapi:10.0 ."
                }
            }
        }
        stage('Stop and Remove Existing Container') {
            steps {
                script {
                    // Stop and remove the existing container if it exists
                    sh "docker stop mon-container || true"
                    sh "docker rm mon-container || true"
                }
            }
        }
        stage('Run FastAPI Container') {
            steps {
                script {
                    // Run the FastAPI container
                    sh "docker run -d -p 8000:8000 --name mon-container mlops_2023/weather_forecast-fastapi:10.0"
                }
            }
        }
        stage('Wait for FastAPI to Start') {
            steps {
                script {
                    // Wait for FastAPI to be up and running
                    def maxRetries = 30
                    def retries = 0
                    def fastApiContainerIp = sh(script: "docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' mon-container", returnStdout: true).trim()
                    def responseCode = sh(script: "curl -s -o /dev/null -w '%{http_code}' http://${fastApiContainerIp}:8000", returnStatus: true)
                    if (responseCode == 200) {
                        echo "FastAPI is up and running."
                    } else {
                        error "FastAPI did not start successfully."
                    }
                }
            }
        }
    }
}
