pipeline {
    environment {
        DOCKER_ID = "votre_docker_id" // Remplacez par votre ID Docker
        DOCKER_IMAGE = "ml-app" // Nom de l'image pour le service ML
        DOCKER_TAG = "v.${BUILD_ID}.0" // Tag basé sur l'ID de build
    }
    agent any
    stages {
        stage('Docker Build') {
            steps {
                script {
                    sh '''
                    docker rm -f ml-container || true
                    docker build -t $DOCKER_ID/$DOCKER_IMAGE:$DOCKER_TAG .
                    sleep 6
                    '''
                }
            }
        }
        stage('Docker Run') {
            steps {
                script {
                    sh '''
                    docker run -d -p 5000:5000 --name ml-container $DOCKER_ID/$DOCKER_IMAGE:$DOCKER_TAG
                    sleep 10
                    '''
                }
            }
        }
        stage('Test Acceptance') {
            steps {
                script {
                    sh 'curl localhost:5000'
                }
            }
        }
        stage('Docker Push') {
            environment {
                DOCKER_PASS = credentials("DOCKER_HUB_PASS")
            }
            steps {
                script {
                    sh '''
                    docker login -u $DOCKER_ID -p $DOCKER_PASS
                    docker push $DOCKER_ID/$DOCKER_IMAGE:$DOCKER_TAG
                    '''
                }
            }
        }
        // Ajoutez les étapes de déploiement similaires à celles que vous avez mentionnées
        // ...
    }
    post {
        failure {
            mail to: "b2o936@gmail.com",
                 subject: "Echec du build ML: ${env.JOB_NAME} #${env.BUILD_ID}",
                 body: "Consulter les détails du build: ${env.BUILD_URL}"
        }
    }
}
