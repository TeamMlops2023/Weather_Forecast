pipeline {
    agent any
    environment {
        KUBECONFIG = '/var/jenkins_home/.kube/config'
    }
    stages {
        stage('Build and Push MySQL Image') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'dockerhub_credentials', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                        dir('database') {
                            sh 'docker build -t mlopsweather2023/mysql-image:latest .'
                            echo 'Construction de l\'image Docker MySQL réussie.'
                        }
                        sh 'echo $DOCKER_PASS | docker login --username $DOCKER_USER --password-stdin'
                        echo 'Connexion à Docker Hub réussie.'
                        sh 'docker push mlopsweather2023/mysql-image:latest'
                        echo 'Image Docker MySQL poussée vers Docker Hub.'
                    }
                }
            }
        }
        stage('Setup and Initialize Database') {
            steps {
                script {
                    sh 'docker stop mysql-container || true'
                    sh 'docker rm mysql-container || true'
                    sh 'docker run -d --name mysql-container -p 3306:3306 mlopsweather2023/mysql-image:latest'
                    sh 'sleep 30' // Attendez que le conteneur MySQL démarre complètement
                    dir('database') {
                        sh 'docker cp ./init.sql mysql-container:/init.sql'
                        sh 'docker exec mysql-container mysql -uroot -pmysecretpassword -e "source /init.sql"'
                        echo 'Initialisation de la base de données réussie.'
                    }
                }
            }
        }
    }
    post {
        always {
            echo 'Pipeline MySQL terminé. Vérifiez les logs pour les détails.'
        }
    }
}
