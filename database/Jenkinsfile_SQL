pipeline {
    agent any
    environment {
        KUBECONFIG = '/var/jenkins_home/.kube/config'
    }
    stages {
        stage('Prepare Environment') {
            steps {
                sh 'rm -rf Weather_Forecast'
            }
        }
        stage('Get kind-Kubeconfig') {
            steps {
                sh 'curl -LJO https://github.com/TeamMlops2023/Weather_Forecast/raw/BAS_ALAIN/kubernetes/kind-kubeconfig'
                echo 'kind-Kubeconfig récupéré depuis GitHub.'
            }
        }
        stage('Setup Database for Testing') {
            steps {
                script {
                    // Cloner le dépôt Git et copier les fichiers nécessaires
                    sh 'git clone -b BAS_ALAIN --single-branch https://github.com/TeamMlops2023/Weather_Forecast.git'
                    sh 'cp Weather_Forecast/kubernetes/mysql-deployment.yaml .'
                    sh 'cp Weather_Forecast/kubernetes/database-service.yaml .'

                    // Déployer un environnement de test pour MySQL
                    sh 'kubectl apply -f mysql-deployment.yaml'
                    sh 'kubectl apply -f database-service.yaml'
                    sh 'sleep 30' // Attendre que MySQL soit prêt
                }
            }
        }
        stage('Run Database Tests') {
            steps {
                script {
                    // Exécuter les tests de la base de données ici
                    sh """
                    kubectl exec $(kubectl get pod -l app=database -o jsonpath='{.items[0].metadata.name}') -- mysql -uroot -pmysecretpassword -e "
                    -- Les commandes de test pour MySQL vont ici
                    "
                    """
                }
            }
        }
        stage('Deploy Database') {
            steps {
                script {
                    // Déployer la base de données dans l'environnement de production
                    sh 'kubectl apply -f mysql-deployment.yaml'
                    sh 'kubectl apply -f database-service.yaml'
                }
            }
        }
        stage('Cleanup') {
            steps {
                script {
                    // Nettoyer l'environnement de test
                    sh 'kubectl delete -f mysql-deployment.yaml'
                    sh 'kubectl delete -f database-service.yaml'
                }
            }
        }
    }
    post {
        always {
            echo 'Pipeline terminé. Vérifiez les logs pour les détails.'
        }
    }
}
